{
	parserClass="com.github.syuchan1005.gitprefix.grammar.psi.PrefixResourceParser"
	extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

	psiClassPrefix="PrefixResource"
	psiImplClassSuffix="Impl"
	psiPackage="com.github.syuchan1005.gitprefix.grammar.psi"
	psiImplPackage="com.github.syuchan1005.gitprefix.grammar.psi.impl"
	psiImplUtilClass="com.github.syuchan1005.gitprefix.grammar.psi.PrefixResourcePsiImplUtil"

	elementTypeHolderClass="com.github.syuchan1005.gitprefix.grammar.psi.PrefixResourceTypes"
	elementTypeClass="com.github.syuchan1005.gitprefix.grammar.PrefixResourceElementType"
	tokenTypeClass="com.github.syuchan1005.gitprefix.grammar.PrefixResourceTokenType"

	tokens = [
		LINE_COMMENT="regexp://.*"
        BLOCK_COMMENT="regexp:/\*(.|\n|[^*][^/])*?\*/"

        BLOCK_NAME='regexp:[^\s:|/{}.>][^\s:|/{}]*'
        LEFT_BRACE="{"
        RIGHT_BRACE="}"
        EXPAND_BLOCK="..."
		INNER_BLOCK=">"

        VALUE='regexp:[^\s:|/{}][^\n/{}]*$'
        EMOJI_KEY="regexp::([^:\n]|.)*?:\n"
        TEXT_KEY="regexp:\|([^|\n]|.)*?\|\n"
	]
}

root ::= root_item*

private root_item ::= !<<eof>> (property|named_block) {pin=1 recoverWhile=root_recover }
private root_recover ::= !(key|named_block)

property ::= key VALUE? {
	mixin="com.github.syuchan1005.gitprefix.grammar.mixin.PrefixResourcePropertyMixin"
	methods=[getKey getEmoji getIcon getValueText]
}
private key ::= EMOJI_KEY | TEXT_KEY

named_block ::= BLOCK_NAME LEFT_BRACE (property|named_block|block_expr)* RIGHT_BRACE {
	mixin="com.github.syuchan1005.gitprefix.grammar.mixin.PrefixResourceNamedBlockMixin"
	methods=[getName setName getNameIdentifier]
}
block_expr ::= expand_block_expr | inner_block_expr {
	mixin="com.github.syuchan1005.gitprefix.grammar.mixin.PrefixResourceBlockExprMixin"
	methods=[getName setName getExprType getTargetNamedBlock]
}
private expand_block_expr ::= EXPAND_BLOCK BLOCK_NAME
private inner_block_expr ::= INNER_BLOCK BLOCK_NAME
